{"version":3,"sources":["Tile.js","Board.js","Game.js","App.js","index.js"],"names":["Tile","id","value","toggleTile","className","onClick","Board","useState","tiles","setTiles","renderedTiles","setRenderedTiles","turn","setTurn","gameOver","setGameOver","winner","setWinner","p1Score","setP1Score","p2Score","setP2Score","createTiles","x","i","push","renderTiles","tilesToRender","map","tile","onTileClicked","tileId","console","log","updatedArray","checkTiles","count","useEffect","style","width","Game","height","paddingBottom","App","overflow","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4cc4aa7a.chunk.js","sourcesContent":["import React, {useState, useEffect} from 'react'\r\n\r\nconst Tile = ({id, value, toggleTile}) => {\r\n\r\n    return (\r\n        <div className={`tile text-4xl tracking-tight font-extrabold text-center text-gray-100 border-gray-800 border-2 ${value === null ? \"bg-white\" : \"\"} ${value === 1 ? 'bg-red-500': \"\"} ${value === 2 ? 'bg-blue-500' : ''} `} \r\n        onClick={() => toggleTile(id)}>\r\n            {value == null ? \"\" : (value === 1 ? 'X': 'O')}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Tile\r\n","import React,{useState,useEffect} from 'react'\r\nimport Tile from './Tile'\r\n\r\nconst Board = () => {\r\n    const [tiles, setTiles] = useState([])\r\n    const [renderedTiles, setRenderedTiles] = useState()\r\n    const [turn, setTurn] = useState(1);\r\n    const [gameOver, setGameOver] = useState(false);\r\n    const [winner, setWinner] = useState(null); \r\n    const [p1Score, setP1Score] = useState(0);\r\n    const [p2Score, setP2Score] = useState(0);\r\n    \r\n    const newGame = () => {\r\n        createTiles();\r\n        setGameOver(false)\r\n        setWinner(null)\r\n    }\r\n\r\n    const createTiles = () => {\r\n        const x = []; \r\n        for(let i = 0; i < 9; i++){\r\n            x.push({\r\n                id: i,\r\n                value: null\r\n            })\r\n        }\r\n        setTiles(x,renderTiles(tiles));\r\n    }\r\n\r\n    const renderTiles = (tilesToRender) => {\r\n        const x = tilesToRender.map(tile => {\r\n           return <Tile key={tile.id} id={tile.id} value={tile.value} toggleTile={onTileClicked} />\r\n        })\r\n        setRenderedTiles(x);\r\n    }\r\n    const onTileClicked = (tileId) => {\r\n        console.log('Click')\r\n        if(tiles[tileId].value == null && !gameOver){\r\n            const updatedArray = [...tiles]\r\n            if(turn === 1){\r\n                updatedArray[tileId].value = 1;\r\n                setTurn(2)\r\n            } else if( turn === 2){\r\n                updatedArray[tileId].value = 2;\r\n                setTurn(1)\r\n            }\r\n            setTiles(updatedArray, checkTiles())\r\n        }\r\n        \r\n    }\r\n    const checkTiles = () => {\r\n        \r\n        if(tiles[0].value === tiles[1].value && tiles[1].value === tiles[2].value && tiles[2].value !== null){\r\n            setWinner(tiles[0].value, setGameOver(true))\r\n        } else if(tiles[3].value === tiles[4].value && tiles[4].value === tiles[5].value && tiles[5].value !== null){\r\n            setWinner(tiles[3].value, setGameOver(true))\r\n        } else if(tiles[6].value === tiles[7].value && tiles[7].value === tiles[8].value && tiles[8].value !== null){\r\n            setWinner(tiles[6].value, setGameOver(true))\r\n        } else if(tiles[0].value === tiles[3].value && tiles[3].value === tiles[6].value && tiles[6].value !== null){\r\n            setWinner(tiles[0].value, setGameOver(true))\r\n        } else if(tiles[1].value === tiles[4].value && tiles[4].value === tiles[7].value && tiles[7].value !== null){\r\n            setWinner(tiles[1].value, setGameOver(true))\r\n        } else if(tiles[2].value === tiles[5].value && tiles[5].value === tiles[8].value && tiles[8].value !== null){\r\n            setWinner(tiles[2].value, setGameOver(true))\r\n        } else if(tiles[0].value === tiles[4].value && tiles[4].value === tiles[8].value && tiles[8].value !== null){\r\n            setWinner(tiles[0].value, setGameOver(true))\r\n        } else if(tiles[2].value === tiles[4].value && tiles[4].value === tiles[6].value && tiles[6].value !== null){\r\n            setWinner(tiles[2].value, setGameOver(true))\r\n        } else if(tiles[0].value !== null) {\r\n            let count = 0;\r\n\r\n            tiles.map(x => {\r\n                if(x.value === null){\r\n                    count++\r\n                }\r\n            });\r\n    \r\n            if(count === 0){\r\n                setWinner('draw', setGameOver(true))\r\n            }\r\n            console.log(`count: ${count}`)\r\n        }\r\n\r\n        \r\n    }\r\n\r\n    useEffect(() => {\r\n        createTiles();\r\n\r\n    }, []);\r\n    useEffect(() => {\r\n        const newWinner = winner;\r\n        if(winner === 1){\r\n            setP1Score(p1Score + 1)\r\n        } else if (winner === 2){\r\n            setP2Score(p2Score + 1)\r\n        }\r\n\r\n    }, [winner]);\r\n    useEffect(() => {\r\n        renderTiles(tiles);\r\n\r\n    }, [tiles]);\r\n\r\n    return (\r\n        <div className=\"board my-7 flex flex-col items-center\">\r\n            <div className=\"stats font-bold text-center text-gray-700 text-2xl flex flex-col justify-around items-center\">\r\n                {/* <h2>Current Turn: Player {turn}</h2> */}\r\n                <div className=\"scores flex justify-center\" style={{width: '450px'}}>\r\n                    <div className={`playerScore text-white text-center py-2 rounded-tl-3xl\r\n                    ${turn === 1? 'bg-red-500' : 'bg-red-300'}\r\n                    `}>\r\n                        X Score: {p1Score}\r\n                    </div>\r\n                    <div className={`playerScore text-white text-center py-2 rounded-tr-3xl\r\n                    ${turn === 2? 'bg-blue-500' : 'bg-blue-300'}\r\n                    `}>\r\n                        O Score: {p2Score}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"grid\">\r\n                {renderedTiles}\r\n            </div>\r\n            {gameOver? \r\n                <div className=\"flex justify-center flex-col gameOver bg-green-600 text-white rounded-md p-4 shadow-md opacity-90\">\r\n                    <h1 className=\"font-bold text-center text-white text-6xl\">Game Over</h1>\r\n                    <h3 className=\"text-base text-center text-2xl\">{winner === 1 || winner === 2? `Winner is Player ${winner}`: \"Draw\"}</h3>\r\n                    <p className=\"newGame flex items-center justify-center px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-bold text-white hover:text-green-200 text-lg\" onClick={newGame}>New Game?</p>\r\n                </div>  : ''} \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Board\r\n","import React from 'react'\r\nimport Board from './Board'\r\n\r\nconst Game = () => {\r\n    return (\r\n        <div style={{height: 'fit-content', paddingBottom: '15vh'}}>\r\n            <h1 className=\"text-6xl tracking-tight font-extrabold text-center text-gray-800\">Tic Tac Toe</h1>\r\n            <Board />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Game\r\n","import './App.css';\nimport Game from './Game'\n\nfunction App() {\n  return (\n    <div className=\"App bg-gray-100 flex justify-center items-center\" style={{height: '100vh', overflow: 'hidden'}}>\n      <Game />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}